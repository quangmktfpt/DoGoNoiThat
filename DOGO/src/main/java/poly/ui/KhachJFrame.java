/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.ui;

import poly.ui.manager.Doimatkhaudialog;
import poly.controller.KhachJFrameController;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author Nghia
 */
public class KhachJFrame extends javax.swing.JFrame {
   
    private KhachJFrameController controller;

    /**
     * Creates new form KhachJFrame
     */
    public KhachJFrame() {
        initComponents();
        
        // Khởi tạo controller
        controller = new KhachJFrameController(this);
        
        addHoverTextEffect(jButton4);
        addHoverTextEffect(jButton5);
        addHoverTextEffect(jButton6);
        addHoverTextEffect(jButton7);
        addHoverTextEffect(jButton8);
        addHoverTextEffect(jButton9);
        addHoverTextEffect(jButton10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sidebarPanel = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerPanel.setBackground(new java.awt.Color(204, 204, 255));
        headerPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FURNITURE STORE");
        headerPanel.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        sidebarPanel.setBackground(new java.awt.Color(204, 204, 255));
        sidebarPanel.setLayout(new java.awt.GridLayout(7, 1, 0, 5));

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton4.setText("Duyệt Sản phẩm ");
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setFocusPainted(false);
        jButton4.setMaximumSize(new java.awt.Dimension(200, 40));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton4);

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Giỏ hàng");
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton5);

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Thanh toán  ");
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setFocusPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton6);

        jButton7.setBackground(new java.awt.Color(204, 204, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton7.setText("Theo Dõi Đơn Hàng");
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton7);

        jButton8.setBackground(new java.awt.Color(204, 204, 255));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton8.setText("Hồ sơ ");
        jButton8.setBorder(null);
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setFocusPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton8);

        jButton9.setBackground(new java.awt.Color(204, 204, 255));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setText("Đánh giá ");
        jButton9.setBorder(null);
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.setFocusPainted(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton9);

        jButton10.setBackground(new java.awt.Color(204, 204, 255));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setText("Hỗ trợ ");
        jButton10.setBorder(null);
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setFocusPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        sidebarPanel.add(jButton10);

        getContentPane().add(sidebarPanel, java.awt.BorderLayout.LINE_START);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icon/AnhNenGo.png"))); // NOI18N
        getContentPane().add(jLabel2, java.awt.BorderLayout.CENTER);

        jMenu2.setText("Menu");
        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icon/menu.jpg")));
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        // Thêm nút đăng xuất bên phải
        javax.swing.JButton logoutButton = new javax.swing.JButton();
        logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icon/logout.jpg")));
        logoutButton.setToolTipText("Đăng xuất");
        logoutButton.setBorder(null);
        logoutButton.setContentAreaFilled(false);
        logoutButton.setFocusPainted(false);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        
        // Thêm glue để đẩy nút logout sang phải
        jMenuBar1.add(javax.swing.Box.createHorizontalGlue());
        jMenuBar1.add(logoutButton);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Mở màn hình duyệt sản phẩm
        poly.ui.DuyetspJDialog_nghia duyetsp = new poly.ui.DuyetspJDialog_nghia(this, true);
        duyetsp.setLocationRelativeTo(this);
        duyetsp.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Mở màn hình giỏ hàng
        poly.ui.GioHangJDialog giohang = new poly.ui.GioHangJDialog(this, true);
        giohang.setLocationRelativeTo(this);
        giohang.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Mở màn hình thanh toán thông qua controller
        controller.openThanhToan();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Mở màn hình theo dõi đơn hàng
        poly.ui.TDDonHangJDialog_nghia tddon = new poly.ui.TDDonHangJDialog_nghia(this, true);
        tddon.setLocationRelativeTo(this);
        tddon.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Mở màn hình hồ sơ thông qua controller
        controller.openHoSo();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Mở dialog đánh giá sản phẩm thông qua controller
        // Kiểm tra đơn hàng đã nhận trước khi cho phép đánh giá
        checkAndOpenDanhGia();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // Mở màn hình hỗ trợ thông qua controller
        controller.openHoTro();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {
      
    }

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Xác nhận đăng xuất
        int choice = javax.swing.JOptionPane.showConfirmDialog(this, 
            "Bạn có chắc chắn muốn đăng xuất?", 
            "Xác nhận đăng xuất", 
            javax.swing.JOptionPane.YES_NO_OPTION);
        
        if (choice == javax.swing.JOptionPane.YES_OPTION) {
            // Đóng cửa sổ hiện tại
            this.dispose();
            
            // Mở lại màn hình đăng nhập
            poly.ui.DNhapJDialog loginDialog = new poly.ui.DNhapJDialog(null, true);
            loginDialog.setLocationRelativeTo(null);
            loginDialog.setVisible(true);
        }
    }

    // Kiểm tra và mở dialog đánh giá
    private void checkAndOpenDanhGia() {
        try {
            // Lấy user ID hiện tại
            Integer currentUserId = poly.util.CurrentUserUtil.getCurrentUserId();
            if (currentUserId == null) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Vui lòng đăng nhập để đánh giá sản phẩm!", 
                    "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Lấy đơn hàng đã nhận của khách hàng
            poly.dao.impl.OrderDAOImpl orderDAO = new poly.dao.impl.OrderDAOImpl();
            java.util.List<poly.entity.Order> allUserOrders = orderDAO.selectByUserId(currentUserId);
            java.util.List<poly.entity.Order> receivedOrders = new java.util.ArrayList<>();
            
            // Lọc đơn hàng có trạng thái "Đã nhận"
            for (poly.entity.Order order : allUserOrders) {
                if ("Đã nhận".equals(order.getOrderStatus())) {
                    receivedOrders.add(order);
                }
            }
            
            if (receivedOrders.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Bạn chưa có đơn hàng nào đã nhận để đánh giá!", 
                    "Thông báo", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            // Hiện dialog chọn sản phẩm để đánh giá
            showProductSelectionDialog(receivedOrders);
            
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Lỗi khi kiểm tra đơn hàng: " + e.getMessage(), 
                "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Hiện dialog chọn sản phẩm để đánh giá
    private void showProductSelectionDialog(java.util.List<poly.entity.Order> receivedOrders) {
        // Tạo danh sách sản phẩm đã nhận
        java.util.List<String> productOptions = new java.util.ArrayList<>();
        java.util.List<poly.entity.OrderDetail> orderDetails = new java.util.ArrayList<>();
        
        for (poly.entity.Order order : receivedOrders) {
            poly.dao.impl.OrderDetailDAOImpl orderDetailDAO = new poly.dao.impl.OrderDetailDAOImpl();
            java.util.List<poly.entity.OrderDetail> details = orderDetailDAO.selectByOrderId(order.getOrderId());
            orderDetails.addAll(details);
        }
        
        if (orderDetails.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Không tìm thấy sản phẩm nào để đánh giá!", 
                "Thông báo", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        // Tạo danh sách tên sản phẩm
        for (poly.entity.OrderDetail detail : orderDetails) {
            poly.dao.impl.ProductDAOImpl productDAO = new poly.dao.impl.ProductDAOImpl();
            poly.entity.Product product = productDAO.selectById(detail.getProductId());
            if (product != null) {
                productOptions.add(product.getProductName());
            }
        }
        
        // Hiện dialog chọn sản phẩm
        String selectedProduct = (String) javax.swing.JOptionPane.showInputDialog(
            this,
            "Chọn sản phẩm để đánh giá:",
            "Chọn sản phẩm",
            javax.swing.JOptionPane.QUESTION_MESSAGE,
            null,
            productOptions.toArray(),
            productOptions.get(0)
        );
        
        if (selectedProduct != null) {
            // Tìm sản phẩm được chọn
            for (poly.entity.OrderDetail detail : orderDetails) {
                poly.dao.impl.ProductDAOImpl productDAO = new poly.dao.impl.ProductDAOImpl();
                poly.entity.Product product = productDAO.selectById(detail.getProductId());
                if (product != null && product.getProductName().equals(selectedProduct)) {
                    // Mở dialog đánh giá với thông tin sản phẩm thực tế
                    javax.swing.ImageIcon productImage = new javax.swing.ImageIcon(getClass().getResource("/poly/icon/AnhNenGo.png"));
                    controller.openDanhGia(product.getProductName(), productImage, true);
                    return;
                }
            }
        }
    }

    // Hiệu ứng hover cho màu chữ JButton
    private void addHoverTextEffect(javax.swing.JButton button) {
        Color originalFg = button.getForeground();
        Color hoverFg = new Color(220, 20, 60); // Đỏ tươi (Crimson)
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setForeground(hoverFg);
            }
            @Override
            public void mouseExited(MouseEvent e) {
                button.setForeground(originalFg);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhachJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel sidebarPanel;
    // End of variables declaration//GEN-END:variables
}
