/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.ui.manager;
import poly.dao.SupplierDAO;
import poly.dao.impl.SupplierDAOImpl;
import poly.entity.Supplier;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.JOptionPane;

public class QLNhaCungCap11 extends javax.swing.JDialog {
    
private SupplierDAO supplierDAO = new SupplierDAOImpl();
private List<Supplier> supplierList;
private int currentRow = -1;

     public QLNhaCungCap11(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    setLocationRelativeTo(null);
    setupTableColumns();
    fillToTable();
    addEventHandlers();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSelectAll = new javax.swing.JButton();
        btnDelSelectedAll = new javax.swing.JButton();
        btnRemoveSelectedAll = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Id = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        HotLineName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Refesh = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Phone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Address = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quản lí nhà cung cấp");
        jLabel1.setForeground(new java.awt.Color(44, 62, 80));

        jLabel2.setText("Tìm kiếm:");

        Search.setText("Tìm");
        Search.setBackground(new java.awt.Color(70, 130, 180));
        Search.setForeground(java.awt.Color.WHITE);
        Search.setFont(new java.awt.Font("Segoe UI", 1, 12));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhà cung cấp", "Tên nhà cung cấp", "Số điện thoại", "Email", "Địa chỉ", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnSelectAll.setText("Chọn tất cả");
        btnSelectAll.setBackground(new java.awt.Color(52, 152, 219));
        btnSelectAll.setForeground(java.awt.Color.WHITE);
        btnSelectAll.setFont(new java.awt.Font("Segoe UI", 1, 12));
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        btnDelSelectedAll.setText("Xóa đã chọn");
        btnDelSelectedAll.setBackground(new java.awt.Color(231, 76, 60));
        btnDelSelectedAll.setForeground(java.awt.Color.WHITE);
        btnDelSelectedAll.setFont(new java.awt.Font("Segoe UI", 1, 12));
        btnDelSelectedAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelSelectedAllActionPerformed(evt);
            }
        });

        btnRemoveSelectedAll.setText("Bỏ chọn");
        btnRemoveSelectedAll.setBackground(new java.awt.Color(155, 89, 182));
        btnRemoveSelectedAll.setForeground(java.awt.Color.WHITE);
        btnRemoveSelectedAll.setFont(new java.awt.Font("Segoe UI", 1, 12));
        btnRemoveSelectedAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSelectedAllActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.setBackground(new java.awt.Color(46, 204, 113));
        btnLamMoi.setForeground(java.awt.Color.WHITE);
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLamMoi))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelectAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelSelectedAll)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveSelectedAll)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Search)
                    .addComponent(btnLamMoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectAll)
                    .addComponent(btnDelSelectedAll)
                    .addComponent(btnRemoveSelectedAll))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Danh mục", jPanel1);

        jLabel6.setText("Mã loại:");

        jLabel8.setText("Email:");

        jLabel9.setText("Tên liên hệ:");

        jLabel10.setText("Tên nhà cung cấp");

        Add.setText("Thêm");
        Add.setBackground(new java.awt.Color(46, 204, 113));
        Add.setForeground(java.awt.Color.WHITE);
        Add.setFont(new java.awt.Font("Segoe UI", 1, 12));
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Update.setText("Cập nhật");
        Update.setBackground(new java.awt.Color(52, 152, 219));
        Update.setForeground(java.awt.Color.WHITE);
        Update.setFont(new java.awt.Font("Segoe UI", 1, 12));

        Delete.setText("Xóa");
        Delete.setBackground(new java.awt.Color(231, 76, 60));
        Delete.setForeground(java.awt.Color.WHITE);
        Delete.setFont(new java.awt.Font("Segoe UI", 1, 12));

        Refesh.setText("Làm mới");
        Refesh.setBackground(new java.awt.Color(155, 89, 182));
        Refesh.setForeground(java.awt.Color.WHITE);
        Refesh.setFont(new java.awt.Font("Segoe UI", 1, 12));

        jLabel11.setText("Số điện thoại:");

        jLabel4.setText("Địa chỉ:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Add)
                        .addGap(18, 18, 18)
                        .addComponent(Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Refesh)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Email))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HotLineName))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Phone))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Address)))
                        .addContainerGap(93, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(HotLineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Update)
                    .addComponent(Delete)
                    .addComponent(Refesh))
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Chỉnh sửa", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(270, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(300, 300, 300))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && jTable1.getSelectedRow() != -1) {
            int row = jTable1.getSelectedRow();
            String id = (String) jTable1.getValueAt(row, 0);
            Supplier s = supplierDAO.selectById(id);
            if (s != null) {
                setForm(s);
                jTabbedPane1.setSelectedIndex(0); 
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        fillToTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(true, i, model.getColumnCount() - 1);
        }
    }//GEN-LAST:event_btnSelectAllActionPerformed

    private void btnDelSelectedAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelSelectedAllActionPerformed
        // Xóa tất cả các mục đã được chọn (checkbox cuối cùng được check)
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        boolean found = false;
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            Boolean checked = (Boolean) model.getValueAt(i, model.getColumnCount() - 1);
            if (checked != null && checked) {
                String id = (String) model.getValueAt(i, 0);
                try {
                    supplierDAO.delete(id);
                    found = true;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Lỗi xóa: " + ex.getMessage());
                }
            }
        }
        if (found) {
            fillToTable();
            clearForm();
            JOptionPane.showMessageDialog(this, "Đã xóa các mục đã chọn!");
        } else {
            JOptionPane.showMessageDialog(this, "Không có mục nào được chọn để xóa!");
        }
    }//GEN-LAST:event_btnDelSelectedAllActionPerformed

    private void btnRemoveSelectedAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSelectedAllActionPerformed
         // Bỏ chọn tất cả các mục (uncheck hết cột cuối)
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(false, i, model.getColumnCount() - 1);
        }
    }//GEN-LAST:event_btnRemoveSelectedAllActionPerformed

    private String validateSupplier(Supplier s) {
        if (s.getSupplierId().isEmpty() || s.getSupplierName().isEmpty() || s.getContactName().isEmpty()
            || s.getPhone().isEmpty() || s.getEmail().isEmpty() || s.getAddress().isEmpty()) {
            return "Vui lòng nhập đầy đủ tất cả các trường!";
        }
        // Kiểm tra email
        if (!s.getEmail().matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
            return "Email không hợp lệ!";
        }
        // Kiểm tra số điện thoại (bắt đầu bằng 0, 9-11 số)
        if (!s.getPhone().matches("^0\\d{8,10}$")) {
            return "Số điện thoại không hợp lệ!";
        }
        return null; // Hợp lệ
    }

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {                                    
       try {
            Supplier s = getForm();
            String error = validateSupplier(s);
            if (error != null) {
                JOptionPane.showMessageDialog(this, error);
                return;
            }
            if (supplierDAO.selectById(s.getSupplierId()) != null) {
                JOptionPane.showMessageDialog(this, "Mã nhà cung cấp đã tồn tại!");
                return;
            }
            supplierDAO.insert(s);
            fillToTable();
            clearForm();
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi thêm: " + ex.getMessage());
        }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLNhaCungCap11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLNhaCungCap11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLNhaCungCap11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLNhaCungCap11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QLNhaCungCap11 dialog = new QLNhaCungCap11(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField Address;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField HotLineName;
    private javax.swing.JTextField Id;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Phone;
    private javax.swing.JButton Refesh;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JButton btnDelSelectedAll;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnRemoveSelectedAll;
    private javax.swing.JButton btnSelectAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void setupTableColumns() {
        // Thiết lập chiều rộng cột cho bảng đẹp hơn
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(120); // Mã nhà cung cấp
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(180); // Tên nhà cung cấp
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(130); // Số điện thoại
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(200); // Email
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(250); // Địa chỉ
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);  // Checkbox
        
        // Cho phép scroll ngang
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        
        // Thiết lập màu sắc và font cho bảng
        jTable1.setRowHeight(28);
        jTable1.setGridColor(new java.awt.Color(189, 195, 199));
        jTable1.setSelectionBackground(new java.awt.Color(52, 152, 219));
        jTable1.setSelectionForeground(java.awt.Color.WHITE);
        jTable1.setBackground(new java.awt.Color(248, 249, 250));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 12));
        
        // Thiết lập header đẹp hơn với gradient
        jTable1.getTableHeader().setBackground(new java.awt.Color(44, 62, 80));
        jTable1.getTableHeader().setForeground(new java.awt.Color(236, 240, 241));
        jTable1.getTableHeader().setFont(new java.awt.Font("Segoe UI", 1, 12));
        jTable1.getTableHeader().setBorder(javax.swing.BorderFactory.createEtchedBorder());
        
        // Tạo renderer tùy chỉnh cho header với gradient
        jTable1.getTableHeader().setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setBackground(new java.awt.Color(44, 62, 80));
                setForeground(new java.awt.Color(236, 240, 241));
                setFont(new java.awt.Font("Segoe UI", 1, 12));
                setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                setBorder(javax.swing.BorderFactory.createCompoundBorder(
                    javax.swing.BorderFactory.createEtchedBorder(),
                    javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10)
                ));
                return c;
            }
        });
        
        // Thiết lập renderer cho tất cả các ô với alternating colors
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                
                // Alternating row colors
                if (!isSelected) {
                    if (row % 2 == 0) {
                        setBackground(new java.awt.Color(255, 255, 255));
                    } else {
                        setBackground(new java.awt.Color(245, 245, 245));
                    }
                }
                
                // Tooltip cho cột địa chỉ
                if (column == 4 && value != null) {
                    setToolTipText(value.toString());
                } else {
                    setToolTipText(null);
                }
                
                setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 2, 5));
                return c;
            }
        });
    }
    
    private void fillToTable() {
    supplierList = supplierDAO.selectAll();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    
    for (Supplier s : supplierList) {
        model.addRow(new Object[]{
            s.getSupplierId(),
            s.getSupplierName(),
            s.getPhone(),
            s.getEmail(),
            s.getAddress(),
            false
        });
    }
    
    setupTableColumns();
    currentRow = -1;
}
    
private void clearForm() {
    Id.setText(""); 
    Name.setText(""); 
    HotLineName.setText(""); 
    Phone.setText(""); 
    Email.setText("");
    Address.setText("");

    currentRow = -1;
    jTable1.clearSelection();
}

private Supplier getForm() {
    String id = Id.getText().trim();
    String name = Name.getText().trim();
    String contact = HotLineName.getText().trim();
    String phone = Phone.getText().trim();
    String email = Email.getText().trim();
    String address = Address.getText().trim();
    return new Supplier(id, name, contact, phone, email, address);
}

private void setForm(Supplier s) {
    Id.setText(s.getSupplierId());
    Name.setText(s.getSupplierName());
    HotLineName.setText(s.getContactName());
    Phone.setText(s.getPhone());
    Email.setText(s.getEmail());
    Address.setText(s.getAddress());

}

private void addEventHandlers() {
  
    Update.addActionListener(e -> {
        try {
            Supplier s = getForm();
            String error = validateSupplier(s);
            if (error != null) {
                JOptionPane.showMessageDialog(this, error);
                return;
            }
            if (supplierDAO.selectById(s.getSupplierId()) == null) {
                JOptionPane.showMessageDialog(this, "Mã nhà cung cấp không tồn tại!");
                return;
            }
            supplierDAO.update(s);
            fillToTable();
            clearForm();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi cập nhật: " + ex.getMessage());
        }
    });
    Delete.addActionListener(e -> {
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Chọn dòng để xóa!");
            return;
        }
        String id = (String) jTable1.getValueAt(row, 0);
        int confirm = JOptionPane.showConfirmDialog(this, "Xác nhận xóa: " + id + "?", "Xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                supplierDAO.delete(id);
                fillToTable();
                clearForm();
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi xóa: " + ex.getMessage());
            }
        }
    });
  
    Refesh.addActionListener(e -> clearForm());
    Search.addActionListener(e -> {
        String keyword = txtTimKiem.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Supplier s : supplierDAO.searchByKeyword(keyword)) {
            model.addRow(new Object[]{
                s.getSupplierId(),
                s.getSupplierName(),
                s.getPhone(),
                s.getEmail(),
                s.getAddress(),
                false
            });
        }
        setupTableColumns();
    });
   
    jTable1.getSelectionModel().addListSelectionListener(e -> {
        int row = jTable1.getSelectedRow();
        if (row >= 0 && row < supplierList.size()) {
            String id = (String) jTable1.getValueAt(row, 0);
            Supplier s = supplierDAO.selectById(id);
            if (s != null) setForm(s);
            currentRow = row;
        }
    });
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getClickCount() == 2 && jTable1.getSelectedRow() != -1) {
                int row = jTable1.getSelectedRow();
                String id = (String) jTable1.getValueAt(row, 0);
                Supplier s = supplierDAO.selectById(id);
                if (s != null) {
                    setForm(s);
                    jTabbedPane1.setSelectedIndex(1); // Chuyển sang tab 'Chỉnh sửa'
                }
            }
        }
    });
}




}
