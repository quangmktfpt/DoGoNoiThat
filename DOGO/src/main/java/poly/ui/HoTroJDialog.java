/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.ui;

import javax.swing.JOptionPane;
import poly.entity.User;
import poly.util.CurrentUserUtil;

/**
 *
 * @author Nghia
 */
public class HoTroJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HoTroJDialog
     */
    public HoTroJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("H·ªó Tr·ª£ & Li√™n H·ªá");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Th√¥ng Tin Li√™n H·ªá");

        jLabel3.setText("üìß Email: jLabel3@gmail.com");

        jLabel4.setText("üìû S·ªë ƒëi·ªán tho·∫°i: 0123456789");

        jLabel5.setText("üìçƒê·ªãa ch·ªâ: Khu C√¥ng Nghi·ªáp T∆∞ B·∫£n");

        jButton1.setText("Nh·∫Øn tin v·ªõi ch√∫ng t√¥i");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(0, 207, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HoTroJDialog dialog = new HoTroJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    // Th√™m c√°c bi·∫øn cho logic x·ª≠ l√Ω
    private poly.entity.User currentUser;

    // Th√™m c√°c bi·∫øn cho giao di·ªán
    private javax.swing.JLabel jLabel9; // Icon email
    private javax.swing.JLabel jLabel10; // Icon phone
    private javax.swing.JLabel jLabel11; // Icon address

    /**
     * Kh·ªüi t·∫°o d·ªØ li·ªáu
     */
    private void initData() {
        currentUser = getCurrentUser();

        // C·∫≠p nh·∫≠t th√¥ng tin li√™n h·ªá v·ªõi icon
        jLabel3.setText("üìß dogonoithat@gmail.com");
        jLabel4.setText("üìû 0123456789");
        jLabel5.setText("üìç Khu C√¥ng Nghi·ªáp T∆∞ B·∫£n");

        // C·∫≠p nh·∫≠t m√†u s·∫Øc v√† font
        jLabel1.setForeground(new java.awt.Color(0, 123, 255)); // M√†u xanh d∆∞∆°ng
        jLabel2.setForeground(new java.awt.Color(0, 123, 255));


        // Th√™m placeholder cho c√°c √¥ nh·∫≠p li·ªáu


        // Th√™m s·ª± ki·ªán cho c√°c √¥ nh·∫≠p li·ªáu




        // Th√™m s·ª± ki·ªán cho n√∫t g·ª≠i
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessage();
            }
        });

        // Th√™m s·ª± ki·ªán cho n√∫t reset


        // Th√™m hi·ªáu ·ª©ng hover cho c√°c n√∫t
        addHoverEffect(jButton1);

    }

    /**
     * L·∫•y th√¥ng tin user hi·ªán t·∫°i
     */
    private User getCurrentUser() {
        try {
            Integer userId = CurrentUserUtil.getCurrentUserId();
            System.out.println("Getting current user with ID: " + userId);

            if (userId != null) {
                // L·∫•y th√¥ng tin user th·ª±c t·ª´ database
                try {
                    poly.dao.UserDAO userDAO = new poly.dao.impl.UserDAOImpl();
                    User user = userDAO.selectById(userId);
                    if (user != null) {
                        System.out.println("Found user in database: " + user.getFullName());
                        return user;
                    } else {
                        System.out.println("User not found in database for ID: " + userId);
                    }
                } catch (Exception e) {
                    System.err.println("Error getting user from database: " + e.getMessage());
                    e.printStackTrace();
                }

                // Fallback: t·∫°o user v·ªõi ID n·∫øu kh√¥ng t√¨m th·∫•y trong database
                User fallbackUser = new User();
                fallbackUser.setUserId(userId);
                fallbackUser.setFullName("Kh√°ch h√†ng #" + userId);
                fallbackUser.setUsername("customer" + userId);
                System.out.println("Created fallback user: " + fallbackUser.getFullName());
                return fallbackUser;
            } else {
                System.out.println("No current user ID found");
            }
        } catch (Exception e) {
            System.err.println("Error in getCurrentUser: " + e.getMessage());
            e.printStackTrace();
        }
        return null;
    }

    /**
     * G·ª≠i tin nh·∫Øn li√™n h·ªá
     */
    private void sendMessage() {
        // Thay v√¨ g·ª≠i ContactMessage, m·ªü chat window
        openChatSupport();

    }

    private void openChatSupport() {
        try {
            ChatWindow chatWindow = new ChatWindow(this);
            chatWindow.setLocationRelativeTo(this);
            chatWindow.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "L·ªói khi m·ªü chat h·ªó tr·ª£: " + e.getMessage(),
                    "L·ªói", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * X√≥a form
     */

    /**
     * Reset form v·ªÅ tr·∫°ng th√°i ban ƒë·∫ßu
     */

    /**
     * Th√™m hi·ªáu ·ª©ng hover cho button
     */
    private void addHoverEffect(javax.swing.JButton button) {
        java.awt.Color originalColor = button.getBackground();
        java.awt.Color hoverColor = new java.awt.Color(0, 123, 255);

        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(hoverColor);
                button.setForeground(java.awt.Color.WHITE);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(originalColor);
                button.setForeground(java.awt.Color.BLACK);
            }
        });
    }

    /**
     * X·ª≠ l√Ω s·ª± ki·ªán n√∫t chat h·ªó tr·ª£
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // M·ªü c·ª≠a s·ªï chat
        poly.ui.ChatWindow chatWindow = new poly.ui.ChatWindow(this);
        chatWindow.setVisible(true);
    }
}
