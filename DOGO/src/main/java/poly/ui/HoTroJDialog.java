/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.ui;

/**
 *
 * @author Nghia
 */
public class HoTroJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HoTroJDialog
     */
    public HoTroJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("H·ªó Tr·ª£ & Li√™n H·ªá");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Th√¥ng Tin Li√™n H·ªá");

        jLabel3.setText("üìß Email: jLabel3@gmail.com");

        jLabel4.setText("üìû S·ªë ƒëi·ªán tho·∫°i: 0123456789");

        jLabel5.setText("üìçƒê·ªãa ch·ªâ: Khu C√¥ng Nghi·ªáp T∆∞ B·∫£n");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setText("Ch·ªß ƒê·ªÅ H·ªó Tr·ª£");

        jLabel7.setText("Vui l√≤ng nh·∫≠p n·ªôi dung y√™u c·∫ßu h·ªó tr·ª£ d∆∞·ªõi ƒë√¢y");

        jLabel8.setText("Ch·ªß ƒë·ªÅ y√™u c·∫ßu");

        jTextArea1.setColumns(30);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("\n");
        jTextArea1.setWrapStyleWord(true);

        jButton1.setText("G·ª≠i Y√™u C·∫ßu");

        jButton2.setText("Refresh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(105, 127, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jButton1)
                        .addGap(72, 72, 72)
                        .addComponent(jButton2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoTroJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HoTroJDialog dialog = new HoTroJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    // Th√™m c√°c bi·∫øn cho logic x·ª≠ l√Ω
    private poly.dao.ContactMessageDAO contactMessageDAO;
    private poly.entity.User currentUser;
    
    // Th√™m c√°c bi·∫øn cho giao di·ªán
    private javax.swing.JLabel jLabel9; // Icon email
    private javax.swing.JLabel jLabel10; // Icon phone
    private javax.swing.JLabel jLabel11; // Icon address
    
    /**
     * Kh·ªüi t·∫°o d·ªØ li·ªáu
     */
    private void initData() {
        contactMessageDAO = new poly.dao.impl.ContactMessageDAOImpl();
        currentUser = getCurrentUser();
        
        // C·∫≠p nh·∫≠t th√¥ng tin li√™n h·ªá v·ªõi icon
        jLabel3.setText("üìß dogonoithat@gmail.com");
        jLabel4.setText("üìû 0123456789");
        jLabel5.setText("üìç Khu C√¥ng Nghi·ªáp T∆∞ B·∫£n");
        
        // C·∫≠p nh·∫≠t m√†u s·∫Øc v√† font
        jLabel1.setForeground(new java.awt.Color(0, 123, 255)); // M√†u xanh d∆∞∆°ng
        jLabel2.setForeground(new java.awt.Color(0, 123, 255));
        jLabel6.setForeground(new java.awt.Color(0, 123, 255));
        
        // Th√™m placeholder cho c√°c √¥ nh·∫≠p li·ªáu
        jTextField1.setText("V√≠ d·ª•: Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c");
        jTextField1.setForeground(java.awt.Color.GRAY);
        jTextArea1.setText("M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i...");
        jTextArea1.setForeground(java.awt.Color.GRAY);
        
        // Th√™m s·ª± ki·ªán cho c√°c √¥ nh·∫≠p li·ªáu
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (jTextField1.getText().equals("V√≠ d·ª•: Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c")) {
                    jTextField1.setText("");
                    jTextField1.setForeground(java.awt.Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (jTextField1.getText().isEmpty()) {
                    jTextField1.setText("V√≠ d·ª•: Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c");
                    jTextField1.setForeground(java.awt.Color.GRAY);
                }
            }
        });
        
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (jTextArea1.getText().equals("M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i...")) {
                    jTextArea1.setText("");
                    jTextArea1.setForeground(java.awt.Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (jTextArea1.getText().isEmpty()) {
                    jTextArea1.setText("M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i...");
                    jTextArea1.setForeground(java.awt.Color.GRAY);
                }
            }
        });
        
        // Th√™m s·ª± ki·ªán cho n√∫t g·ª≠i
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessage();
            }
        });
        
        // Th√™m s·ª± ki·ªán cho n√∫t reset
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetForm();
            }
        });
        
        // Th√™m hi·ªáu ·ª©ng hover cho c√°c n√∫t
        addHoverEffect(jButton1);
        addHoverEffect(jButton2);
    }
    
    /**
     * L·∫•y th√¥ng tin user hi·ªán t·∫°i
     */
    private poly.entity.User getCurrentUser() {
        try {
            Integer userId = poly.util.CurrentUserUtil.getCurrentUserId();
            if (userId != null) {
                poly.dao.UserDAO userDAO = new poly.dao.impl.UserDAOImpl();
                return userDAO.selectById(userId);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    /**
     * G·ª≠i tin nh·∫Øn li√™n h·ªá
     */
    private void sendMessage() {
        // Validate d·ªØ li·ªáu
        String subject = jTextField1.getText().trim();
        String message = jTextArea1.getText().trim();
        
        // Ki·ªÉm tra placeholder
        if (subject.isEmpty() || subject.equals("V√≠ d·ª•: Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c")) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Vui l√≤ng nh·∫≠p ch·ªß ƒë·ªÅ!", 
                "Th√¥ng b√°o", 
                javax.swing.JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
            return;
        }
        
        if (message.isEmpty() || message.equals("M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i...")) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Vui l√≤ng nh·∫≠p n·ªôi dung tin nh·∫Øn!", 
                "Th√¥ng b√°o", 
                javax.swing.JOptionPane.WARNING_MESSAGE);
            jTextArea1.requestFocus();
            return;
        }
        
        if (currentUser == null) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Kh√¥ng th·ªÉ x√°c ƒë·ªãnh ng∆∞·ªùi d√πng hi·ªán t·∫°i!", 
                "L·ªói", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            // T·∫°o tin nh·∫Øn m·ªõi
            poly.entity.ContactMessage contactMessage = new poly.entity.ContactMessage();
            contactMessage.setUserId(currentUser.getUserId());
            contactMessage.setCustomerName(currentUser.getFullName());
            contactMessage.setCustomerEmail(currentUser.getEmail());
            contactMessage.setCustomerPhone(currentUser.getPhone());
            contactMessage.setSubject(subject);
            contactMessage.setMessage(message);
            
            // L∆∞u v√†o database
            contactMessageDAO.insert(contactMessage);
            
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!\nCh√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ.", 
                "Th√†nh c√¥ng", 
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            // X√≥a form
            clearForm();
            
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, 
                "L·ªói khi g·ª≠i tin nh·∫Øn: " + e.getMessage(), 
                "L·ªói", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * X√≥a form
     */
    private void clearForm() {
        resetForm();
    }
    
    /**
     * Reset form v·ªÅ tr·∫°ng th√°i ban ƒë·∫ßu
     */
    private void resetForm() {
        jTextField1.setText("V√≠ d·ª•: Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c");
        jTextField1.setForeground(java.awt.Color.GRAY);
        jTextArea1.setText("M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i...");
        jTextArea1.setForeground(java.awt.Color.GRAY);
    }
    
    /**
     * Th√™m hi·ªáu ·ª©ng hover cho button
     */
    private void addHoverEffect(javax.swing.JButton button) {
        java.awt.Color originalColor = button.getBackground();
        java.awt.Color hoverColor = new java.awt.Color(0, 123, 255);
        
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(hoverColor);
                button.setForeground(java.awt.Color.WHITE);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(originalColor);
                button.setForeground(java.awt.Color.BLACK);
            }
        });
    }
}
